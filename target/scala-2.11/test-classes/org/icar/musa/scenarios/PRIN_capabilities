capability check_wake_up {
    pre: sleeping(user) and not ill(user) and ( (wake_up_time(user) and not passed_wake_up_time(user) ) or waiting_after_remind(user))
    post: standing(user) or anomaly(user)
    scenario standing [ remove posture(user,laying), add posture(user,standing), add standing(user) ]
    scenario over_sleeping [ add passed_wake_up_time(user) ]
    scenario anomaly [ add ill(user) ]
}

capability remind_wake_up {
    pre: sleeping(user) and not ill(user) and passed_wake_up_time(user) and not waiting_after_remind(user)
    post: waiting_after_remind(user)
    scenario remind [ add waiting_after_remind(user) ]
}

capability check_entertainment {
    pre: not checked(user,entertainment) and not sleeping(user) and not ill(user) and ( entertainment_time(user) and not passed_entertainment_time(user) ) and location(user,living_room)
    post: timeslot1(user,free) or anomaly(user)
    scenario free [ add timeslot1(user,free), add checked(user,entertainment) ]
    scenario ill [ add ill(user), add checked(user,entertainment) ]
}

capability suggest_video {
    pre: timeslot1(user,free) and not rejected(user,video)
    post: timeslot1(user,video)
    scenario accept_slot1 [remove timeslot1(user,free), add timeslot1(user,video) ]
}

capability provide_video {
    pre: timeslot1(user,video) and not provided_slot1(user,video)
    post: provided_slot1(user)
    scenario provided_slot1 [ add provided_slot1(user)]
}

capability suggest_game {
    pre: timeslot1(user,free) and not rejected(user,game) and not openness(user,low)
    post: timeslot1(user,game)
    scenario accept_slot1 [remove timeslot1(user,free), add timeslot1(user,game) ]
}

capability provide_game {
    pre: timeslot1(user,game) and not provided_slot1(user,game)
    post: provided_slot1(user)
    scenario provided_slot1 [ add provided_slot1(user)]
}

capability suggest_interaction {
    pre: timeslot1(user,free) and not rejected(user,interaction) and not openness(user,high)
    post: timeslot1(user,interaction)
    scenario accept_slot1 [remove timeslot1(user,free), add timeslot1(user,interaction) ]
}

capability provide_interaction {
    pre: timeslot1(user,interaction) and not provided_slot1(user,interaction)
    post: provided_slot1(user)
    scenario provided_slot1 [ add provided_slot1(user)]
}

capability check_free_time {
    pre: provided_slot1(user)
    post: not checked(user,entertainment) or passed_entertainment_time(user)
    scenario free [remove checked(user,entertainment), remove provided_slot1(user), remove timeslot1(user,interaction), remove timeslot1(user,game), remove timeslot1(user,video) ]
    scenario busy [add passed_entertainment_time(user) ]
}


capability alert_anomaly {
    pre: ill(user)
    post: alert_thrown(user)
    scenario alert [ add alert_thrown(user) ]
}
